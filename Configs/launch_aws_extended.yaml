# Launch analysis environment on AWS with existing data volume.
# For bcbio analyses, volume expected to contain bcbio installation
# in /mnt/work/bcbio
# Makes it easy to stop/start analyses that fit on a single node and EBS volume.
# -----
# edited for more flexibility (see comments)
---
- hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    # dynamical vars (project_vars.yaml)
    - include_vars: "{{ varfile }}"
    - name: Launch EC2 instance
      register: ec2
      local_action:
        module: ec2
        group: "{{ security_group }}"
        instance_type: "{{ instance_type }}"
        spot_price: "{{ spot_price }}"
        image: "{{ image_id }}"
        keypair: "{{ keypair }}"
        vpc_subnet_id: "{{ vpc_subnet }}"
        instance_profile_name: "{{ iam_role }}"
        region: "{{ region }}"
        zone: "{{ zone }}"
        assign_public_ip: yes
        count: 1
        wait: yes
        state: present
    # name the instance
    - name: Name the instance
      local_action:
        module: ec2_tag
        region: "{{ region }}"
        resource: "{{ item.id }}"
        state: present
        tags:
          Name: "{{ instance_name }}"
      with_items: "{{ ec2.instances }}"

      # attach bcbio volume
    - name: Attach bcbio volume
      local_action: ec2_vol instance={{ item.id }} id={{ bcbio_volume }} device_name=/dev/xvdb state=present region={{ region }}
      with_items: "{{ ec2.instances }}"
      # attach the analysis volume (containing /tmp)
    - name: Attach analysis volume
      local_action: ec2_vol instance={{ item.id }} id={{ analysis_volume }} device_name=/dev/xvdc state=present region={{ region }}
      with_items: "{{ ec2.instances }}"

    - name: Add new instance to host group
      local_action:
        module: add_host
        hostname: "{{ item.public_dns_name }}"
        groupname: launched
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
      with_items: "{{ ec2.instances }}"
    - name: Wait for SSH
      local_action: wait_for host={{ item.public_ip }} port=22 state=started
      with_items: "{{ ec2.instances }}"

- hosts: launched
  remote_user: ubuntu
  gather_facts: no
  pre_tasks:
    - raw: sudo apt-get -y install python-simplejson
      ignore_errors: true
    - action: setup
  tasks:
    # dynamical vars (project_vars.yaml)
    - include_vars: "{{ varfile }}"
    # prepare bcbio volume
    - name: Create ext4 filesystem if not present
      filesystem: fstype=ext4 dev=/dev/xvdb
      become: true
    - name: Mount bcbio volume
      become: true
      mount: name=/mnt/work src=/dev/xvdb fstype=ext4 state=mounted
    - name: Create bcbio directory if missing
      file: path=/mnt/work/bcbio state=directory owner=ubuntu
      become: true
    - name: Add bcbio to path
      lineinfile: line="export PATH=/mnt/work/bcbio/bin:$PATH" dest=~/.bashrc
    # pause to allow previous preparation to finish
    - pause:
        seconds: 60
    # prepare analysis volume (/tmp)
    - name: Create ext4 filesystem if not present
      filesystem: fstype=ext4 dev=/dev/xvdc
      become: true
    - name: Mount analysis volume
      become: true
      mount: name=/mnt/work/analysis src=/dev/xvdc fstype=ext4 state=mounted
    # added pause to allow some time before updating the system packages, otherwise the update will not commence
    - pause:
        seconds: 30
    - name: Change analysis volume permissons
      file: path=/mnt/work/analysis state=directory owner=ubuntu
      become: true
    - apt: update_cache=yes
      become: true
    - apt: name="{{ item }}"
      become: true
      with_items: [git, unzip, wget, tar, gzip, bzip2]
      ignore_errors: true
